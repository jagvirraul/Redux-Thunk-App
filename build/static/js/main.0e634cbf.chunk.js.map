{"version":3,"sources":["redux-app/redux/constants.js","redux-app/redux/action/action.js","redux-app/components/Additem.js","redux-app/components/Main.js","redux-app/redux/reducer/itemList.js","redux-app/redux/reducer/index.js","redux-app/redux/store.js","redux-app/App.js","index.js"],"names":["ADD_ITEM","GET_USERS","nextid","additem","contents","type","payload","id","getUserList","dispatch","a","axios","get","res","console","log","data","connect","addUserInList","useState","input","setInput","handleAdditem","className","onChange","e","target","value","onKeyDown","event","keyCode","onClick","initialState","totalPage","activePage","items","state","userList","itemList","callUserListAPT","setState","useEffect","getTotalPage","item","getPageItems","page","slice","totalUser","length","map","elem","title","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","containerClassName","activeClassName","combineReducers","action","createStore","rootReducer","applyMiddleware","thunk","App","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e634cbf.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\r\nexport const GET_USERS = \"GET_USERS\";","import { ADD_ITEM, GET_USERS } from \"../constants\";\r\nimport axios from \"axios\";\r\nlet nextid = 100;\r\nexport const additem = (contents) => {\r\n    return ({\r\n        type: ADD_ITEM,\r\n        payload: {\r\n            id: ++nextid,\r\n         contents,\r\n        }\r\n    })\r\n};\r\n\r\nexport const getUserList = (...params) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/posts/`)\r\n        console.log(\"res\", res)\r\n        dispatch({\r\n            type: GET_USERS,\r\n            payload: res.data,\r\n        })\r\n    } catch (error) {\r\n        console.log(\"error\", error)\r\n    }\r\n};\r\n// export const getUserList = () => {\r\n//     return ({\r\n//         type: GET_USERS,\r\n//         payload: res.data,\r\n//     })\r\n// };\r\n\r\n// export const getUserList = async ()  => {\r\n//     try {\r\n//         const res = await axios.get(`https://jsonplaceholder.typicode.com/posts/`)\r\n//         console.log(\"res\",res)\r\n//         return ({\r\n//             type: GET_USERS,\r\n//             payload: res.data,\r\n//         })\r\n//     } catch (error) {\r\n//         console.log(\"error\", error)\r\n//     }\r\n// };\r\n\r\n\r\n// export const GetUsers = () => {\r\n//     console.log(\"GetUsers\");\r\n//     return async (dispatch) => {\r\n//         console.log(\"GetUsers dispatch\");\r\n//         await axios.get(`https://jsonplaceholder.typicode.com/posts/`)\r\n//             .then(res => {\r\n//                 const persons = res.data;\r\n//                 dispatch({\r\n//                     type: GET_USERS,\r\n//                     payload: persons\r\n//                 });\r\n//             })\r\n//     };\r\n// };","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { additem } from '../redux/action/action';\r\n\r\nconst Additem = ({addUserInList}) => {\r\n    const [input, setInput] = useState(\"\");\r\n    const handleAdditem = () => {\r\n        addUserInList(input);\r\n        setInput(\"\");\r\n    };\r\n    const handleKeyDown = (event)=> {\r\n        if(event.keyCode === 13) { \r\n            handleAdditem();\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-item\">\r\n            <input\r\n                onChange={e => setInput(e.target.value)}\r\n                value={input} onKeyDown={handleKeyDown}\r\n            />\r\n            <button className=\"add-todo\" onClick={handleAdditem}>\r\n                Add Item\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addUserInList: (...params) => dispatch(additem(...params))\r\n})\r\nexport default connect(null,mapDispatchToProps)(Additem);","import React, { useEffect, useState } from 'react';\r\nimport { getUserList } from '../redux/action/action';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { connect } from 'react-redux';\r\nimport Additem from './Additem';\r\nimport './style.scss';\r\nconst initialState = {\r\n    totalPage: 0,\r\n    activePage:0,\r\n    items : []\r\n}\r\n\r\nconst Main = ({ callUserListAPT, userList }) => {\r\n    const [state,setState] = useState(initialState);\r\n    console.log(\"userList\",userList)\r\n    useEffect(() => {\r\n        callUserListAPT()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const totalPage = getTotalPage();\r\n        const item = getPageItems(0);\r\n        setState({totalPage,items:item, activePage:0})\r\n    }, [userList])\r\n\r\n    const onPageChange = ({selected}) => {\r\n        console.log(\"selected\",selected)\r\n        const item = getPageItems(selected);\r\n        setState({items:item, activePage:selected})\r\n\r\n    }\r\n\r\n    const getPageItems = (page)=>{\r\n        const item = userList.slice((page)*10, (page+1)*10);\r\n        return item\r\n\r\n    }\r\n\r\n    const getTotalPage = ()=>{\r\n        const totalUser = userList && userList.length || 0;\r\n        const page = totalUser /10;\r\n        const extra = totalUser % 10 ? 1 : 0;\r\n        const totalPage = page + extra;\r\n        return totalPage\r\n    }\r\n\r\n    return (\r\n        <div className=\"main\">\r\n        <div className=\"main-container\">\r\n            <div className=\"heading\">\r\n                <h1>Title</h1>\r\n            </div>\r\n            <Additem/>\r\n            <div className=\"list\" >\r\n                    {state.items.map((elem) => {\r\n                        return (\r\n                            <div>\r\n                                <span className=\"list-id\">{elem.id}</span>\r\n                                <span>{elem.title}</span>    \r\n                            </div>\r\n                        );\r\n                    }\r\n                    )}\r\n            </div>\r\n            <div className=\"pagination-container\">\r\n                <ReactPaginate\r\n                    previousLabel={'Previous'}\r\n                    nextLabel={'Next'}\r\n                    breakLabel={'.......'}\r\n                    breakClassName={'break-me'}\r\n                    pageCount={state.totalPage}\r\n                    marginPagesDisplayed={1}\r\n                    pageRangeDisplayed={1}\r\n                    onPageChange={onPageChange}\r\n                    containerClassName={'pagination'}\r\n                    activeClassName={'active'}\r\n                />\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({ \r\n        userList: state.itemList.userList || [] ,\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    callUserListAPT: (...params) => dispatch(getUserList(...params))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import { ADD_ITEM ,GET_USERS} from \"../constants\";\r\n\r\nconst initialState = {\r\n    userList:[]\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            const {id,contents} = action.payload;\r\n            return ({\r\n                ...state,\r\n                userList: [...state.userList,{title:contents,id:id}]\r\n            });\r\n        \r\n        case GET_USERS:\r\n            return ({\r\n                ...state,\r\n                userList: action.payload\r\n            });\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport itemList from \"./itemList\";\r\n\r\nexport default combineReducers({itemList});","import { createStore,applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer';\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n\r\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()","import React from 'react';\r\nimport Main from './components/Main'\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n        <Main />\r\n       </Provider> \r\n    )\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./redux-app/App\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}